<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aqzscn.www.blog.mapper.BlogArticleMapper">
  <!--基础字段类型集合-->
  <resultMap id="BaseResultMap" type="com.aqzscn.www.blog.mapper.BlogArticle">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="abstract_txt" jdbcType="VARCHAR" property="abstractTxt" />
    <result column="abstract_img" jdbcType="VARCHAR" property="abstractImg" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="view_num" jdbcType="BIGINT" property="viewNum" />
    <result column="series" jdbcType="BIGINT" property="series" />
    <result column="series_order" jdbcType="INTEGER" property="seriesOrder" />
  </resultMap>
  <!--复杂字段类型集合-->
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.aqzscn.www.blog.mapper.BlogArticle">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <!--预定义的sql语句-->
  <sql id="Base_Column_List">id, title, abstract_txt, abstract_img, update_time, view_num, series, series_order</sql>
  <sql id="Blob_Column_List">content</sql>
  <!--对应Mapper中的方法-->
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from blog_article
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="select" parameterType="com.aqzscn.www.blog.domain.vo.ArticleRequest" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from blog_article
    where 1 = 1
    <if test="title != null">
    and title like concat('%',#{title},'%')
    </if>
  </select>
  <!--查询刚刚添加的博文，用更新时间和标题确保找到的不是别人添加的-->
  <select id="selectByTimeAndTitle" parameterType="com.aqzscn.www.blog.mapper.BlogArticle" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" /> from blog_article where title = #{title} and update_time = #{updateTime, jdbcType=TIMESTAMP}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from blog_article where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.aqzscn.www.blog.mapper.BlogArticle">
    insert into blog_article (id, title, abstract_txt, 
      abstract_img, update_time, view_num, 
      series, series_order, content
      )
    values (#{id,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, #{abstractTxt,jdbcType=VARCHAR}, 
      #{abstractImg,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{viewNum,jdbcType=BIGINT}, 
      #{series,jdbcType=BIGINT}, #{seriesOrder,jdbcType=INTEGER}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.aqzscn.www.blog.mapper.BlogArticle">
    update blog_article
    set title = #{title,jdbcType=VARCHAR},
      abstract_txt = #{abstractTxt,jdbcType=VARCHAR},
      abstract_img = #{abstractImg,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      view_num = #{viewNum,jdbcType=BIGINT},
      series = #{series,jdbcType=BIGINT},
      series_order = #{seriesOrder,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <!--标签关联表相关操作-->
  <!--与标签建立关联-->
  <insert id="insertTag">insert into blog_tags_map (tag_id, article_id) values (#{tagId}, #{articleId})</insert>
  <!--连载相关操作-->
  <!--获取在某个连载中排序最高的博文-->
  <select id="selectLastInSeries" resultMap="BaseResultMap">select id, title, series_order from blog_article where series = #{seriesId} order by series_order desc limit 1</select>
</mapper>